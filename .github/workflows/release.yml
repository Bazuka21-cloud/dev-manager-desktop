# This is a basic workflow to help you get started with Actions
name: 'Release'

on:
  push:
    branches:
      - '!*'
    tags:
      - 'v*.*.*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm`
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - run: npm ci
    - name: Build the app
      run: npm run electron:build

    - name: Create Release (Windows)
      id: create_release_windows
      uses: ncipollo/release-action@v1
      if: runner.os == 'Windows'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release ${{ steps.tagName.outputs.tag }}
        prerelease: true
        allowUpdates: true
        artifact: release/*.exe

    - name: Create Release (Linux)
      id: create_release_linux
      uses: ncipollo/release-action@v1
      if: runner.os == 'Linux'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release ${{ steps.tagName.outputs.tag }}
        prerelease: true
        allowUpdates: true
        artifact: release/*.AppImage

    - name: Create Release (macOS)
      id: create_release_macos
      uses: ncipollo/release-action@v1
      if: runner.os == 'macOS'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release ${{ steps.tagName.outputs.tag }}
        prerelease: true
        allowUpdates: true
        artifact: release/*.dmg
