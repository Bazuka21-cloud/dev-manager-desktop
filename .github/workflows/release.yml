name: 'Release'

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, ubuntu-20.04, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: olegtarasov/get-tag@v2.1.2
        if: ${{ github.event_name == 'release' }}
        id: tagName

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules

      - name: Install Required Packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build the app (Windows)
        if: runner.os == 'Windows'
        run: |
          rustup target add i686-pc-windows-msvc
          npm run build -- --features=vendored-openssl --target x86_64-pc-windows-msvc
          npm run build -- --features=vendored-openssl --target i686-pc-windows-msvc

      - name: Build the app (Linux)
        if: runner.os == 'Linux'
        run: npm run build

      - name: Build the app (macOS)
        if: runner.os == 'macOS'
        run: |
          rustup target add aarch64-apple-darwin
          npm run build -- --features=vendored-openssl --target universal-apple-darwin

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-snapshot
          path: |
            src-tauri/target/**/release/bundle/deb/*.deb
            src-tauri/target/**/release/bundle/appimage/*.AppImage
            src-tauri/target/**/release/bundle/msi/*.msi
            src-tauri/target/**/release/bundle/dmg/*.dmg

      - name: Create Release
        uses: ncipollo/release-action@v1
        if: github.event_name == 'release'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Dev Manager ${{ steps.tagName.outputs.tag }}
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          artifacts: "src-tauri/target/**/release/bundle/deb/*.deb,\
            src-tauri/target/**/release/bundle/appimage/*.AppImage,\
            src-tauri/target/**/release/bundle/msi/*.msi,\
            src-tauri/target/**/release/bundle/dmg/*.dmg"
